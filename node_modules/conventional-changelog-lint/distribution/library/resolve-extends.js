'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

exports.default = resolveExtends;

var _importFrom = require('import-from');

var _importFrom2 = _interopRequireDefault(_importFrom);

var _lodash = require('lodash');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var cwd = _importFrom2.default.bind(null, process.cwd());

// Resolve extend configs
function resolveExtends() {
	var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
	var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'extends';

	var require = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : cwd;

	var extended = loadExtends(config, prefix, key, require).reduceRight(function (r, c) {
		return (0, _lodash.merge)(r, (0, _lodash.omit)(c, [key]));
	}, config[key] ? { [key]: config[key] } : {});

	// Remove deprecation warning in version 3
	if (typeof c === 'object' && 'wildcards' in config) {
		console.warn(`'wildcards' found in top-level configuration ignored. Remove them from your config to silence this warning.`);
	}

	return (0, _lodash.merge)({}, extended, config);
}

// (any, string, string, Function) => any[];
function loadExtends() {
	var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
	var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'extends';

	var require = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : cwd;

	var toExtend = Object.values(config[key] || []);
	return toExtend.reduce(function (configs, raw) {
		var id = [prefix, raw].filter(String).join('-');
		var c = require(id);

		// Remove deprecation warning in version 3
		if (typeof c === 'object' && 'wildcards' in c) {
			console.warn(`'wildcards' found in '${id}' ignored. Raise an issue at 'npm repo ${id}' to remove the wildcards and silence this warning.`);
		}

		return [].concat((0, _toConsumableArray3.default)(configs), [c], (0, _toConsumableArray3.default)(loadExtends(c, prefix, key, require)));
	}, []);
}
module.exports = exports['default'];